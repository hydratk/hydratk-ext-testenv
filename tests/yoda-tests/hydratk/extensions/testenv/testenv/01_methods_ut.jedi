Test-Scenario-1:
  Id: ts_01
  Path: hydratk/extensions/testenv/01_methods_ut.jedi
  Name: ts_init_extension
  Desc: Test _init_extension method
  Author: Petr Rasek <bowman@hydratk.org>
  Version: 0.1
  
  Pre-Req: |
    from hydratk.core.masterhead import MasterHead
  
  Test-Case-1:
    Id: tc_01
    Name: tc_init
    Desc: Initialize extension
    
    Test-Condition-1: 
      Id: tco_01
      Name: tco_init
      Desc: Initialize extension
      
      Test: |
        mh = MasterHead.get_head()
        ext = mh._ext['TestEnv']
        ext._ext_id = ext._ext_name = None
        ext._init_extension()
        res = [ext._ext_id, ext._ext_name]
      
      Validate: |
        this.test_result = str(res)
        exp = ['testenv', 'TestEnv']
        assert (res == exp), '_ext_id, _ext_name = {0}'.format(exp)
        
Test-Scenario-2:
  Id: ts_02
  Path: hydratk/extensions/testenv/01_methods_ut.jedi
  Name: ts_install_db_fc
  Desc: Test install_db_fc method
  Author: Petr Rasek <bowman@hydratk.org>
  Version: 0.1
  
  Pre-Req: |
    from hydratk.core.masterhead import MasterHead
    from os import remove, path
    from time import time
  
  Test-Case-1:
    Id: tc_01
    Name: tc_install
    Desc: Install database
    
    Test-Condition-1: 
      Id: tco_01
      Name: tco_install
      Desc: Install database
      
      Test: |
        mh = MasterHead.get_head()
        ext = mh._ext['TestEnv']
        mh._config['Extensions']['TestEnv']['db_file'] = 'test.db3'
        ext.install_db_fc()
        file = '/var/local/hydratk/testenv/test.db3'
        res = (path.exists(file))
      
      Validate: |
        this.test_result = res
        assert (res), 'file {0} created'.format(file)
        
    Test-Condition-2: 
      Id: tco_02
      Name: tco_reinstall
      Desc: Reinstall database
      
      Test: |
        now = time()
        ext.install_db_fc()
        res = (path.exists(file))
      
      Validate: |
        this.test_result = res
        assert (res), 'file {0} created'.format(file)
        this.test_result = res = path.getmtime(file)
        assert (res > now), 'file is rewritten' 
        mh._config['Extensions']['TestEnv']['db_file'] = 'testenv.db3'
        remove(file)   